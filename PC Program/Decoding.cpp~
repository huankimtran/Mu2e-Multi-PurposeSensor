#include <iostream>
#include <fstream>
#include <string>
using namespace std;
#define LOW_BYTE 1
#define HIGH_BYTE 0
#define NUMBER_OF_DATA_FIELD 4
const bool DISPLAY_UNIT=true;
const string ACC_DATA_UNIT=" g";
const string TEMP_DATA_UNIT=" C";
const string EXTENSION=".txt";
union Word{
	char byte[2];
	short word;
};
union DoubleWord{
	char byte[4];
	unsigned int dblWord;
};
float decodeTemp(short rawDta){
	return (float(rawDta)/340 + 36.53);
}
float decodeAcc(short rawDta,short sensivity){
	return (float(rawDta)/sensivity);
}
int main(int argc,char *argv[]){
	ifstream inpf;
	ostream outf;
	short dtaSetSize,index;
	Word readingData;
	DoubleWord timeStamp;
	if(argc<2)
		cout<<"No path found"<<endl;
	else{		
		inpf.open(argv[0],ifstream::binary);
		string outFileName(argv[1]);
		if(inpf.is_open){
			outFileName+=EXTENSION;
			outf.open(outFileName.c_str);
			inpf.read(&dtaSetSize,1);
			index=0;
			while(!inpf.eof()){
				switch(index%NUMBER_OF_DATA_FIELD){
					case 0:
					inpf.read((char*)&timeStamp,sizeof(DoubleWord));
					outf<<timeStamp.dblWord<<endl;
					break;
					case 1:
					case 2:
					case 3:
					inpf.read((char*)&readingData,sizeof(Word));
					outf<<readingData.word<<DISPLAY_UNIT?ACC_DATA_UNIT:" "<<endl;
					break;
					default:
					break;
				}
				if((++index)==dtaSetSize){
					index=0;
					if(!inpf.eof()){
						inpf.read((char*)&readingData,sizeof(Word));
						outf<<readingData.word<<DISPLAY_UNIT?TEMP_DATA_UNIT:" "<<endl;
					}
				}
			}
			inpf.close();
			out.close();
		}else
			cout<<"There is no file according to the given path"<<endl;
	}
	return 0;
}
